CREATE TABLE IF NOT EXISTS BATCH_JOB_INSTANCE (
                                                  JOB_INSTANCE_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                  VERSION BIGINT,
                                                  JOB_NAME VARCHAR(100) NOT NULL,
    JOB_KEY VARCHAR(32) NOT NULL,
    constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
    );



CREATE TABLE IF NOT EXISTS  BATCH_JOB_EXECUTION  (
                                                     JOB_EXECUTION_ID BIGINT  PRIMARY KEY ,
                                                     VERSION BIGINT,
                                                     JOB_INSTANCE_ID BIGINT NOT NULL,
                                                     CREATE_TIME TIMESTAMP NOT NULL,
                                                     START_TIME TIMESTAMP DEFAULT NULL,
                                                     END_TIME TIMESTAMP DEFAULT NULL,
                                                     STATUS VARCHAR(10),
    EXIT_CODE VARCHAR(20),
    EXIT_MESSAGE VARCHAR(2500),
    LAST_UPDATED TIMESTAMP,
    constraint JOB_INSTANCE_EXECUTION_FK foreign key (JOB_INSTANCE_ID)
    references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
    ) ;

create sequence BATCH_JOB_SEQ;
create sequence BATCH_STEP_EXECUTION_SEQ;
create sequence BATCH_JOB_EXECUTION_SEQ;

--
-- CREATE TABLE  IF NOT EXISTS  BATCH_STEP_EXECUTION_SEQ (ID BIGINT NOT NULL);
-- INSERT INTO BATCH_STEP_EXECUTION_SEQ values(0);
-- CREATE TABLE  IF NOT EXISTS  BATCH_JOB_EXECUTION_SEQ (ID BIGINT NOT NULL) ;
-- INSERT INTO BATCH_JOB_EXECUTION_SEQ values(0);
-- CREATE TABLE  IF NOT EXISTS  BATCH_JOB_SEQ (ID BIGINT NOT NULL);
-- INSERT INTO BATCH_JOB_SEQ values(0);


CREATE TABLE  IF NOT EXISTS  BATCH_JOB_EXECUTION_PARAMS  (
                                                             JOB_EXECUTION_ID BIGINT NOT NULL ,
                                                             PARAMETER_NAME VARCHAR(100) NOT NULL ,
    PARAMETER_TYPE VARCHAR(100) NOT NULL ,
    PARAMETER_VALUE VARCHAR(2500) ,
    IDENTIFYING CHAR(1) NOT NULL ,
    constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
    references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
    );





CREATE TABLE IF NOT EXISTS  BATCH_STEP_EXECUTION  (
                                                      STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY ,
                                                      VERSION BIGINT NOT NULL,
                                                      STEP_NAME VARCHAR(100) NOT NULL,
    JOB_EXECUTION_ID BIGINT NOT NULL,
    CREATE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP DEFAULT NULL ,
    END_TIME TIMESTAMP DEFAULT NULL,
    STATUS VARCHAR(10),
    COMMIT_COUNT BIGINT ,
    READ_COUNT BIGINT ,
    FILTER_COUNT BIGINT ,
    WRITE_COUNT BIGINT ,
    READ_SKIP_COUNT BIGINT ,
    WRITE_SKIP_COUNT BIGINT ,
    PROCESS_SKIP_COUNT BIGINT ,
    ROLLBACK_COUNT BIGINT ,
    EXIT_CODE VARCHAR(20) ,
    EXIT_MESSAGE VARCHAR(2500) ,
    LAST_UPDATED TIMESTAMP,
    constraint JOB_EXECUTION_STEP_FK foreign key (JOB_EXECUTION_ID)
    references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
    ) ;

CREATE TABLE IF NOT EXISTS  BATCH_JOB_EXECUTION_CONTEXT  (
                                                             JOB_EXECUTION_ID BIGINT PRIMARY KEY,
                                                             SHORT_CONTEXT VARCHAR(2500) NOT NULL,
    SERIALIZED_CONTEXT CLOB,
    constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
    references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
    ) ;


CREATE TABLE  IF NOT EXISTS BATCH_STEP_EXECUTION_CONTEXT  (
                                                              STEP_EXECUTION_ID BIGINT PRIMARY KEY,
                                                              SHORT_CONTEXT VARCHAR(2500) NOT NULL,
    SERIALIZED_CONTEXT CLOB,
    constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
    references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
    ) ;



-- create table name_basics (nconst varchar(255) not null, birth_year integer, death_year integer, known_for_title varchar(255), primary_name varchar(255), primary_profession varchar(255), primary key (nconst))
-- create table title_akas (title_id varchar(255) not null, ordering integer not null, akas_language varchar(255), akas_types varchar(255), attributes varchar(255), is_original_title integer, region varchar(255), title varchar(255), primary key (ordering, title_id))
-- create table title_basics (tconst varchar(255) not null, end_year integer, is_adult varchar(255), original_title varchar(300), primary_title varchar(300), runtime_minutes integer, start_year integer, title_genres varchar(255), title_type varchar(255), primary key (tconst))
-- create table title_crew (tconst varchar(255) not null, directors varchar(255), writers varchar(255), primary key (tconst))
create table title_directors (tconst varchar(255) not null, director varchar(255), primary key (tconst,director));
-- create table title_episode (tconst varchar(255) not null, episode_number integer, parent_tconst varchar(255), season_number integer, primary key (tconst))
create table title_genres (tconst varchar(255) not null, genres varchar(255), primary key (tconst,genres));
create table title_principles ( characters varchar(255), job varchar(255), nconst varchar(255), ordering integer, principle_category varchar(255), tconst varchar(255));
-- create table title_ratings (title_rating_id integer not null, average_rating float(24), num_votes integer, tconst varchar(255), primary key (title_rating_id))
create table title_writers (tconst varchar(255) not null, writer varchar(255), primary key (tconst,writer));
-- create index idx_title_basics_tconst on title_basics (tconst)
create index idx_title_directors_tconst on title_directors (tconst);
create index idx_title_genres_tconst on title_genres (tconst);
create index idx_title_principles_tconst on title_principles (tconst);
create index idx_title_principles_nconst on title_principles (nconst);
create index idx_title_writers_tconst on title_writers (tconst);
-- create sequence title_principles_seq start with 1 increment by 100
-- create sequence title_ratings_seq start with 1 increment by 100